@using CurrencyRates.Repository.Models;
@model List<CurrencyRate>

@{
    ViewData["Title"] = "Currencies";
}

<div class="container mt-4">
    <h2 class="text-center">📊 Currency Rates</h2>

    <form asp-action="FetchRates" method="post" class="text-center mb-3">
        <button type="submit" class="btn btn-primary">🔄 Pobierz kursy</button>
    </form>

    <div class="row mb-3">
        <!-- Filtr daty -->
        <div class="col-md-6">
            <label for="dateRange" class="form-label fw-bold">📅 Wybierz zakres dat</label>
            <select id="dateRange" class="form-select">
                <option value="year">📆 Ostatni rok</option>
                <option value="month">📅 Ostatni miesiąc</option>
                <option value="day">📅 Ostatni dzień</option>
                <option value="custom">📅 Wybierz zakres</option>
            </select>
        </div>

        <!-- Filtr od-do -->
        <div class="col-md-3">
            <label for="startDate" class="form-label fw-bold">📆 Od</label>
            <input type="date" id="startDate" class="form-control" disabled />
        </div>
        <div class="col-md-3">
            <label for="endDate" class="form-label fw-bold">📆 Do</label>
            <input type="date" id="endDate" class="form-control" disabled />
        </div>
    </div>

    <!-- Checkboxy dla tabel -->
    <div class="mb-3">
        <label class="fw-bold">📋 Wybierz tabele:</label>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="checkbox" id="tableA" value="A" checked>
            <label class="form-check-label" for="tableA">Tabela A</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="checkbox" id="tableB" value="B" checked>
            <label class="form-check-label" for="tableB">Tabela B</label>
        </div>
        <div class="form-check form-check-inline">
            <input class="form-check-input" type="checkbox" id="tableC" value="C" checked>
            <label class="form-check-label" for="tableC">Tabela C</label>
        </div>
    </div>

    <!-- Checkboxy dla kodów walut -->
    <div class="mb-3">
        <label class="fw-bold">💰 Wybierz waluty:</label>
        <div id="currencyFilters" class="d-flex flex-wrap"></div>
    </div>

    <!-- Paginacja -->
    <div class="mb-3">
        <label class="fw-bold">🔢 Liczba wyników na stronę:</label>
        <select id="itemsPerPage" class="form-select w-auto">
            <option value="10">10</option>
            <option value="20">20</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
    </div>

    <!-- Tabela z kursami -->
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>💰 Currency</th>
                    <th>🔠 Code</th>
                    <th>📉 Rate</th>
                    <th>📆 Date</th>
                    <th>📋 Table</th>
                </tr>
            </thead>
            <tbody id="currencyTableBody">
                @foreach (var rate in Model)
                {
                    <tr data-currency="@rate.Code" data-table="@rate.TableType">
                        <td>@rate.CurrencyName</td>
                        <td>@rate.Code</td>
                        <td>@rate.Rate</td>
                        <td>@rate.Date.ToShortDateString()</td>
                        <td>@rate.TableType</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginacja -->
    <nav>
        <ul class="pagination justify-content-center" id="pagination">
            <!-- Tu zostaną wygenerowane przyciski paginacji -->
        </ul>
    </nav>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const startDateInput = document.getElementById("startDate");
        const endDateInput = document.getElementById("endDate");
        const dateRangeSelect = document.getElementById("dateRange");

        // Obsługa wyboru daty
        dateRangeSelect.addEventListener("change", function () {
            const value = this.value;
            if (value === "custom") {
                startDateInput.removeAttribute("disabled");
                endDateInput.removeAttribute("disabled");
            } else {
                startDateInput.setAttribute("disabled", "disabled");
                endDateInput.setAttribute("disabled", "disabled");
            }
        });

        // Generowanie filtrów walut
        const currencySet = new Set();
        document.querySelectorAll("#currencyTableBody tr").forEach(row => {
            const currencyCode = row.getAttribute("data-currency");
            if (!currencySet.has(currencyCode)) {
                currencySet.add(currencyCode);
                const checkbox = document.createElement("input");
                checkbox.type = "checkbox";
                checkbox.value = currencyCode;
                checkbox.id = `currency-${currencyCode}`;
                checkbox.checked = true;
                checkbox.classList.add("form-check-input");

                const label = document.createElement("label");
                label.htmlFor = `currency-${currencyCode}`;
                label.classList.add("form-check-label", "me-3");
                label.textContent = currencyCode;

                const div = document.createElement("div");
                div.classList.add("form-check", "form-check-inline");
                div.appendChild(checkbox);
                div.appendChild(label);

                document.getElementById("currencyFilters").appendChild(div);

                // Filtracja kursów po walutach
                checkbox.addEventListener("change", function () {
                    document.querySelectorAll(`#currencyTableBody tr[data-currency='${currencyCode}']`)
                        .forEach(row => row.style.display = this.checked ? "" : "none");
                });
            }
        });
    });
</script>
